name: Build and Publish Docker Image

on:
  pull_request:
    branches: [master]

env:
  APP_NAME: trading-journal-authentication
  NAMESPACE: trading-journal-tst

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app-version: ${{ steps.build-version.outputs.APP_VERSION }}-test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Build with Maven
        env:
         PASSWORD: ${{ secrets.PACKAGE_TOKEN }}
        run: |
         mvn -B clean package --file pom.xml --settings settings.xml
         echo "APP_VERSION=$(mvn --file pom.xml --settings settings.xml  -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> "$GITHUB_OUTPUT"
        id: build-version
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: $APP_NAME
          path: target/*.jar

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: $APP_NAME
          path: target
      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}
      - name: Docker Build Version DEV
        run: docker build -t allanweber/$APP_NAME:${{needs.build.outputs.app-version}} -f docker/DockerfileTest .
      - name: Build and Push Version
        run: docker push allanweber/$APP_NAME:${{needs.build.outputs.app-version}}
      - name: Delete Artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: $APP_NAME

  deploy:
   name: Deploy on TST
   runs-on: ubuntu-latest
   needs: [build, docker]
   steps:
     - name: Deploy Image
       uses: actions-hub/kubectl@master
       env:
         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
       with:
         args: set image deployment $APP_NAME $APP_NAME=allanweber/$APP_NAME:${{needs.build.outputs.app-version}} -n $NAMESPACE --record=true
     - name: Check Image Rollout
       uses: actions-hub/kubectl@master
       env:
         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
       with:
         args: rollout status deployment/$APP_NAME -n $NAMESPACE
#
#  test:
#     name: Newman API Test
#     runs-on: ubuntu-latest
#     needs: deploy
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Run API Tests
#         id: run-newman
#         uses: anthonyvscode/newman-action@v1
#         with:
#           collection: postman/TJA.postman_collection.json
#           environment: postman/TJA_test.postman_environment.json
#           reporters: cli
