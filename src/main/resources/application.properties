server.port= ${PORT:8080}
spring.application.name=authentication

#Actuator configurations
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=local
management.endpoints.web.base-path=/
management.endpoints.web.exposure.include=health, metrics, prometheus
management.endpoint.health.probes.enabled=true

#Email configurations
spring.mail.host=${EMAIL_HOST}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.username=${EMAIL_USERNAME}
spring.mail.port=${EMAIL_PORT}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.starttls.enable=true

#Database
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.open-in-view=false
spring.datasource.hikari.maximum-pool-size=2

#Application should send email confirmation to new users
journal.authentication.verification.enabled=true

#Reference for email links generated URLs
journal.authentication.hosts.front-end=${WEB_APP_URL}
journal.authentication.hosts.verification-page=${VERIFICATION_PATH:email-verified}
journal.authentication.hosts.change-password-page=${CHANGE_PASSWORD_PAGE:change-password}

#Startup application
journal.authentication.admin-user.email=${ADMIN_EMAIL}

#JWT Specifics
application.authentication.jwt.service-type=PROVIDER
application.authentication.jwt.private-key=${JWT_PRIVATE_KEY}
application.authentication.jwt.public-key=${JWT_PUBLIC_KEY}
application.authentication.jwt.access-token-expiration=${JWT_ACCESS_TOKEN_EXPIRATION:3600}
application.authentication.jwt.refresh-token-expiration=${JWT_REFRESH_TOKEN_EXPIRATION:86400}
application.authentication.jwt.issuer=${JWT_ISSUER}
application.authentication.jwt.audience=${JWT_AUDIENCE}